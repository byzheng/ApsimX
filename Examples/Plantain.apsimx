<?xml version="1.0" encoding="utf-8"?>
<Simulations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="30">
  <Name>Simulations</Name>
  <DataStore>
    <Name>DataStore</Name>
    <IncludeInDocumentation>true</IncludeInDocumentation>
  </DataStore>
  <Simulation>
    <Name>Plantain</Name>
    <Clock>
      <Name>Clock</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <StartDate>2010-09-01T00:00:00</StartDate>
      <EndDate>2012-12-31T00:00:00</EndDate>
    </Clock>
    <Weather>
      <Name>Weather</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <FileName>WeatherFiles\lincoln.met</FileName>
      <ExcelWorkSheetName />
    </Weather>
    <Summary>
      <Name>Summary</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
    </Summary>
    <SoilArbitrator>
      <Name>Soil Arbitrator</Name>
      <IncludeInDocumentation>true</IncludeInDocumentation>
    </SoilArbitrator>
    <Zone>
      <Name>Field</Name>
      <Folder>
        <Name>Management</Name>
        <Operations>
          <Name>Sowing</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Operation>
            <Date>2010-10-20</Date>
            <Action>[Plantain].Sow(population: 200, cultivar: "Tonic", depth: 10, rowSpacing: 150)</Action>
          </Operation>
          <Operation>
            <Date>2010-10-20</Date>
            <Action>[Fertiliser].Apply(Amount: 60, Type: Fertiliser.Types.UreaN, Depth: 10)</Action>
          </Operation>
        </Operations>
        <Operations>
          <Name>FertiliserSchedule</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Operation>
            <Date>2011-01-05</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2011-02-20</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2011-10-15</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2011-11-15</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2012-01-10</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2012-02-25</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2012-09-15</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2012-10-25</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
          <Operation>
            <Date>2012-11-15</Date>
            <Action>[Fertiliser].Apply(Amount: 20.0, Type: Fertiliser.Types.UreaN, Depth: 30)</Action>
          </Operation>
        </Operations>
        <Manager>
          <Name>AutomaticIrrigation</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Script>
            <allowIrrigation>yes</allowIrrigation>
            <seasonStart>15-Sep</seasonStart>
            <seasonEnd>30-Apr</seasonEnd>
            <seasonsAllocation>10000</seasonsAllocation>
            <triggerDeficit>75</triggerDeficit>
            <targetDeficit>95</targetDeficit>
            <returndays>3</returndays>
            <maximumAmount>15</maximumAmount>
            <depthPAWC>500</depthPAWC>
          </Script>
          <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
    [Serializable] 
    [System.Xml.Serialization.XmlInclude(typeof(Model))]
    public class Script : Model
    {
        //Communication to other modules
        [Link] ISummary summary = null;
        [Link] Irrigation Irrigation;
        [Link] Clock Clock;
        [Link] Soil Soil;
        [Link(IsOptional = true)] Plant existingCrop;
       
        //User inputs from properties tab
        [Description("Turn irrigation on?")]
        public answerType allowIrrigation { get; set; }
        [Description("Start of irrigation season (dd-MMM)")]
        public string seasonStart { get; set; }
        [Description("End of irrigation season (dd-MMM)")]
        public string seasonEnd { get; set; }
        [Description("Season allocation (mm)")]
        public double seasonsAllocation { get; set; }
        [Description("Deficit to trigger irrigation (% PAWC)")]
        public double triggerDeficit { get; set; }
        [Description("Deficit to stop irrigaton (% PAWC)")]
        public double targetDeficit { get; set; }
        [Description("Minimum days for irrigation to return")]
        public double returndays { get; set; }
        [Description("Maximum irrigation application (mm/day)")]
        public double maximumAmount { get; set; }
        [Description("Depth to calculate PAWC (mm)")]
        public double depthPAWC { get; set; }
       
        public enum answerType
        {
            /// <summary>a positive answer</summary>
            yes,
            /// <summary>a negative answer</summary>
            no
        }

        //Class members
        [XmlIgnore] public double TopSWdeficit { get; set; }
        [XmlIgnore] public double TopSWC { get; set; }
        [XmlIgnore] public double DaysSinceIrrigation { get; set; }
        [XmlIgnore] public double AmountToApply { get; set; }
        [XmlIgnore] public double SeasonAppliedAmount { get; set; }
        
        private bool IrrigationIsAllowed { get; set; }
        private bool SeasonIsOpen { get; set; }
        private bool CropIsActive { get; set; }
        private bool IrrigatorIsAvailable { get; set; }
        private bool SoilIsDry { get; set; }

        private DateTime StartDate;
        private DateTime EndDate;
        private double TopDUL;
        private double TopLL;
        private int nLayers;
    
        //Calculate static soil variables
        [EventSubscribe("StartOfSimulation")]
        private void OnStartOfSimulation(object sender, EventArgs e)
        {   
            //Set the season dates
            StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
            EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
            
            //Can we irrigate at all?
            IrrigationIsAllowed = false; 
            if (allowIrrigation == answerType.yes)
                IrrigationIsAllowed = true; 

            //Calculate soil water variables
            double depthFromSurface = 0.0;
            double fracLayer = 0.0;
            nLayers = Soil.Thickness.Length;
            for (int layer = 0; layer < nLayers; layer++)
            {
                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);
                TopLL += Soil.LL15mm[layer] * fracLayer;
                TopDUL += Soil.DULmm[layer] * fracLayer;
                depthFromSurface += Soil.Thickness[layer];
                if (depthFromSurface >= depthPAWC)
                    layer = nLayers;
            }
        }
             
        //Determine daily requirement for irrigation
        [EventSubscribe("StartOfDay")]
        private void OnStartOfDay(object sender, EventArgs e)
        {
            //Can we irrigate today?          
            SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

            //Is there a crop in the ground that needs irrigation?
            CropIsActive = false;
            if ((existingCrop != null) && (existingCrop.IsAlive))
                CropIsActive = true;
            //if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
          
            //Is the irrigator available?
            IrrigatorIsAvailable = false;
            DaysSinceIrrigation += 1;
            if (DaysSinceIrrigation >= returndays)
                IrrigatorIsAvailable = true;
          
            //Is the soil dry enough to require irrigation?
            SoilIsDry = false;
            double depthFromSurface = 0.0;
            double fracLayer = 0.0;
            TopSWC = 0.0;
            for (int layer = 0; layer < nLayers; layer++)
            {
                fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.Thickness[layer]);
                TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
                depthFromSurface += Soil.Thickness[layer];
                if (depthFromSurface >= depthPAWC)
                    layer = nLayers;
            }
            
            TopSWdeficit = TopSWC - TopDUL;
            if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
                SoilIsDry = true;
                
            //Are all the conditions ratifying irrigation
            if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
            {
                //Lets bloody well irrigate then!!!!
                AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
                //AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
                AmountToApply = maximumAmount;
                Irrigation.Apply(AmountToApply);
                DaysSinceIrrigation = 0;
                SeasonAppliedAmount += AmountToApply;
            }
        }
        
        ///Checks whether theDate is between iniDate and endDate (non-year specific)
        private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
        {
            bool result = false;
            if (iniDate.DayOfYear < endDate.DayOfYear)
            {
                // period is within one year, ex: summer in the northern hemisphere
                if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
                    result = true;
            }
            else
            {
                // period goes over the end of the year, ex: summer in the southern hemisphere
                if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
                    result = true;
            }
            
            return result;
        }
    }
}
]]></Code>
        </Manager>
        <Manager>
          <Name>Defoliate</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Script>
            <Crop>.Simulations.Plantain.Field.Plantain</Crop>
            <cutPasture_StartDate>2011-01-01</cutPasture_StartDate>
            <cutPasture_EndDate>2100-12-31</cutPasture_EndDate>
            <defoliateType>Graze</defoliateType>
            <interval2Cut>45</interval2Cut>
            <durationOfCut>1</durationOfCut>
            <removeAmountType>ResidualDM</removeAmountType>
            <herbageAmount>500</herbageAmount>
            <fracDM2Remove>0.8</fracDM2Remove>
            <fracN2Remove>0.8</fracN2Remove>
            <urineDepth>10</urineDepth>
            <fracN2Dung>0.4</fracN2Dung>
            <fracPopDecline>0.05</fracPopDecline>
          </Script>
          <Code><![CDATA[// Defoliates on a regular cycle or one-off via a schedule
// currently defoliates by the amount specified spread evenly over the specified period

using System;
using Models.Core;
using System.Collections.Generic;
using System.Text;
using Models;
using Models.Soils;
using Models.PMF;
using System.Xml.Serialization;
using APSIM.Shared.Utilities;

namespace Models
{
    [Serializable]
    public class Script : Model
    {
        [Link] Zone zone;
        [Link] Clock Clock;
        [Link] Plant Plantain;
        [Link] Fertiliser fertiliser;
        [Link] ISummary summary = null;

        [Description("Choose the crop to harvest:")]
        public IPlant Crop { get; set; }

        [Description("Enter the date to start the rotation (dd/mm/yyyy):")]
        public DateTime cutPasture_StartDate { get; set; }

        [Description("Enter the date to end the rotation (dd/mm/yyyy):")]
        public DateTime cutPasture_EndDate { get; set; }

        [Description("Select type of defoliation:")]
        public defoliationTypes defoliateType { get; set; }

        [Description("Enter the interval between defoliations (days):")]
        public int interval2Cut { get; set; }

        [Description("Enter the number of days to defoliate over (days):")]
        public int durationOfCut { get; set; }

        [Description("Choose what amount is being defined:")]
        public removeAmountTypes removeAmountType { get; set; }

        [Description("Enter the amount to use (kgDM/ha):")]
        public double herbageAmount { get; set; }

        [Description("Enter the fraction of DM that is removed from the field (0-1):")]
        public double fracDM2Remove { get; set; }

        [Description("Enter the fraction of N that is removed from the field (0-1):")]
        public double fracN2Remove { get; set; }

        [Description("Enter the depth down to which urine will applied (mm):")]
        public double urineDepth { get; set; }

        [Description("Enter the proportion of N returned in dung (0-1):")]
        public double fracN2Dung { get; set; }

        [Description("Enter the fraction of population decline due to defoliation (0-1):")]
        public double fracPopDecline { get; set; }

        //fraction of each plant part returned as residue (0-1), wastage
        private double leafResidueFrac = 0.01;
        private double stemResidueFrac = 0.01;
        private double flowerResidueFrac = 0.01;
        private double minLeafAmount = 5.0;

        //Outputs
        //Pasture DM defoliated today (kg/ha)
        [XmlIgnore] public double DefoliatedDM{ get; set; }
        //N defoliate today
        [XmlIgnore] public double DefoliatedN{ get; set; }
        //Pasture DM harvested today (kg/ha)
        [XmlIgnore] public double HarvestedDM{ get; set; }
        //N harvested today
        [XmlIgnore] public double HarvestedN{ get; set; }
        //DM removed from the paddock
        [XmlIgnore] public double RemovedDM{ get; set; }
        //N removed from the paddock
        [XmlIgnore] public double RemovedN{ get; set; }
        //DM returned to the paddock
        [XmlIgnore] public double ReturnedDM{ get; set; }
        //N returned to the paddock
        [XmlIgnore] public double ReturnedN{ get; set; }
        //N returned as dung (SurfaceOM)
        [XmlIgnore] public double NReturnedInDung{ get; set; }
        //N returned as urine (urea)
        [XmlIgnore] public double NReturnedInUrine{ get; set; }
        //Number of days after last harvest
        [XmlIgnore] public int DaysAfterCut{ get; set; }
        //Total standing DM (Leaf + Stem/Sheath) before cut
        [XmlIgnore] public double PreHarvestDM{ get; set; }
        //Total standing DM (Leaf + Stem/Sheath) after cut
        [XmlIgnore] public double PostHarvestDM{ get; set; }

        //Pasture DM harvested this rotation (kg/ha)
        [XmlIgnore] public double RotationHarvestedDM{ get; set; }
        //Pasture DM to be harvested this rotation (kg/ha)
        [XmlIgnore] public double RotationHarvestingDM{ get; set; }

        //Internal variables
        private RemovalFractions removalFractions;
        //The fraction of urine to be applied in each layer
        private double[] FracLayer;
        // total herbage to remove in g/m2 per day
        private double herbageToRemove;
        // counter
        private int daysCutting = 0;
        // type of defoliation (Cut or Graze)
        private string defoliationType;
        // type of DM amount (ResidualDM or DMToRemove)
        private string amountType;
        // auxiliary
        private bool aCutHasHappened = false;
        private bool isStillCutting = false;
        private double cumAmountHarvested;

        // event to add residue / dung to surface OM
        public event BiomassRemovedDelegate BiomassRemoved;

        [EventSubscribe("Commencing")]
        private void OnSimulationCommencing(object sender, EventArgs e)
        {
            removalFractions = new RemovalFractions();
            DaysAfterCut = 0;
            resetVariables();
            if (defoliateType == defoliationTypes.Cut)
                defoliationType = "Cut";
            else
                defoliationType = "Graze";

            if (removeAmountType == removeAmountTypes.ResidualDM)
                amountType = "ResidualDM";
            else
                amountType = "DMToRemove";

            // make sure that rotation start when startDate<simulationStartDay
            if ((Clock.Today > cutPasture_StartDate) && (Clock.Today < cutPasture_EndDate))
                cutPasture_StartDate = Clock.Today;
        }

        [EventSubscribe("DoManagement")]
        private void OnDoManagement(object sender, EventArgs e)
        {
            if (Clock.Today == cutPasture_StartDate)
                DaysAfterCut = interval2Cut;

            if ((Clock.Today >= cutPasture_StartDate) && (Clock.Today <= cutPasture_EndDate))
            {
                // Check whether we should start cutting
                if ((Plantain.IsEmerged) && (DaysAfterCut > 0) && (DaysAfterCut == interval2Cut))
                {
                    Defoliate(defoliationType, herbageAmount * 0.1, amountType, durationOfCut);
                }
            }

            // Check whether we need to continue cutting
            //if ((daysCutting > 0) && (daysCutting <= durationOfCut))
            if (isStillCutting)
            {
                // reset outputs
                resetVariables();

                removeDM(herbageToRemove, defoliationType);
                returnExcreta();
                cumAmountHarvested += HarvestedDM;
                daysCutting += 1;
            }

            // reset outputs
            if (daysCutting < 0)
            {
                resetVariables();
                daysCutting = 0;
            }
        }

        [EventSubscribe("DoManagementCalculations")]
        private void OnDoManagementCalculations(object sender, EventArgs e)
        {
            if ((daysCutting > 0) && (daysCutting < durationOfCut))
                isStillCutting = true;

            if (daysCutting == durationOfCut)
            {
                PostHarvestDM = (double)zone.Get("Plantain.AboveGround.Wt");
                RotationHarvestedDM = cumAmountHarvested;
                aCutHasHappened = true;
                isStillCutting = false;
                daysCutting = -1;
                Plantain.Population = Plantain.Population * (1.0 - fracPopDecline);
            }

            if (aCutHasHappened && (daysCutting == 0))
                DaysAfterCut += 1;
        }

        public enum removeAmountTypes
        {
            /// <summary>Setting DM amount to remove</summary>
            DMToRemove,
            /// <summary>Setting residual DM amount</summary>
            ResidualDM
        }

        public enum defoliationTypes
        {
            /// <summary>Cut</summary>
            Cut,
            /// <summary>Graze</summary>
            Graze
        }

        // resets the values of all outputs
        private void resetVariables()
        {
            DefoliatedDM = 0.0;
            DefoliatedN = 0.0;
            HarvestedDM = 0.0;
            HarvestedN = 0.0;
            RemovedDM = 0.0;
            RemovedN = 0.0;
            ReturnedDM = 0.0;
            ReturnedN = 0.0;
            NReturnedInDung = 0.0;
            NReturnedInUrine = 0.0;
            RotationHarvestedDM = 0.0;
            RotationHarvestingDM = 0.0;
        }

        // Perform the basic calculations for defoliation
        public void Defoliate(string defoliationType, double amountDM, string amountType, int duration)
        {
            // get the existing plant amount
            PreHarvestDM = (double)zone.Get("Plantain.AboveGround.Wt");

            // check duration
            if (duration <= 0)
                throw new Exception("Duration of graze/cut rotation is zero or negative");
            
            // check amount to remove
            if ((amountType == "DMToRemove") && (PreHarvestDM > 0.0))
            {
                summary.WriteMessage(this, "   Defoliating " + (10.0 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
                herbageToRemove = amountDM / duration;
            }
            else if ((amountType == "ResidualDM") && (PreHarvestDM > amountDM))
            {
                summary.WriteMessage(this, "   Defoliating down to approximately " + (10.0 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
                herbageToRemove = (PreHarvestDM - amountDM) / duration;
            }
            else
            {
                herbageToRemove = 0.0;
                summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
                return;
            }

            RotationHarvestingDM = herbageToRemove * duration;
            durationOfCut = duration;
            // first defoliation
            removeDM(herbageToRemove, defoliationType);
            returnExcreta();
            cumAmountHarvested = HarvestedDM;
            daysCutting = 1;
            DaysAfterCut = 0;
        }

        private void removeDM(double removeAmount, string removeType)
        {
            // get the existing biomass
            double leafLiveWt = (double)zone.Get("Plantain.Leaf.Live.Wt");
            double stemLiveWt = (double)zone.Get("Plantain.Stem.Live.Wt");
            double flowerLiveWt = (double)zone.Get("Plantain.Inflorescence.Live.Wt");
            double leafDeadWt = (double)zone.Get("Plantain.Leaf.Dead.Wt");
            double stemDeadWt = (double)zone.Get("Plantain.Stem.Dead.Wt");
            double flowerDeadWt = (double)zone.Get("Plantain.Inflorescence.Dead.Wt");
            double leafLiveN = (double)zone.Get("Plantain.Leaf.Live.N");
            double stemLiveN = (double)zone.Get("Plantain.Stem.Live.N");
            double flowerLiveN = (double)zone.Get("Plantain.Inflorescence.Live.N");
            double leafDeadN = (double)zone.Get("Plantain.Leaf.Dead.N");
            double stemDeadN = (double)zone.Get("Plantain.Stem.Dead.N");
            double flowerDeadN = (double)zone.Get("Plantain.Inflorescence.Dead.N");

            double existingWt = leafLiveWt + leafDeadWt + stemLiveWt + stemDeadWt + flowerLiveWt + flowerDeadWt;
            double existingN = leafLiveN + leafDeadN + stemLiveN + stemDeadN + flowerLiveN + flowerDeadN;

            // Can we harvest anything?
            double removingWt = Math.Min(existingWt, removeAmount);
            if (removingWt > 0.0)
            {
                // get the fractions to remove for each organ (will override the default values)
                // the default is [Plantain].Leaf.BiomassRemovalDefaults.Cut.FractionRemoved, or equivalent
                // >> double leafFracToRemove = removeAmount * (leafLiveWt + leafDeadWt) / existingWt / existingWt;
                double fracToRemove = removingWt / existingWt;
                double leafFracToRemove = 0.0;
                if ((leafLiveWt + leafDeadWt) > 0.0)
                {
                    if (leafLiveWt < minLeafAmount)
                    {
                        // leafWt cannot go below a minimum
                        leafFracToRemove = (removingWt + leafLiveWt - minLeafAmount) / existingWt;
                    }
                    else
                        leafFracToRemove = fracToRemove;
                }

                double stemFracToRemove = ((stemLiveWt + stemDeadWt) > 0.0) ? fracToRemove : 0.0;
                double flowerFracToRemove = ((flowerLiveWt + flowerDeadWt) > 0.0) ? fracToRemove : 0.0;

                // get the fractions to residue (i.e. wastage - will override the default values)
                // the default is [Plantain].Leaf.BiomassRemovalDefaults.Cut.FractionToResidue, or equivalent
                double leafFracToResidue = leafResidueFrac * leafFracToRemove;
                double stemFracToResidue = stemResidueFrac * stemFracToRemove;
                double flowerFracToResidue = flowerResidueFrac * flowerFracToRemove;

                // correct the values to defoliate (so our removing = remove + residue)
                leafFracToRemove -= leafFracToResidue;
                stemFracToRemove -= stemFracToResidue;
                flowerFracToRemove -= flowerFracToResidue;

                // set removal fractions (these overrides the default removals in the plant)
                removalFractions.SetFractionToRemove("Leaf", leafFracToRemove, "Live");
                removalFractions.SetFractionToResidue("Leaf", leafFracToResidue, "Live");
                removalFractions.SetFractionToRemove("Leaf", leafFracToRemove, "Dead");
                removalFractions.SetFractionToResidue("Leaf", leafFracToResidue, "Dead");
                removalFractions.SetFractionToRemove("Stem", stemFracToRemove, "Live");
                removalFractions.SetFractionToResidue("Stem", stemFracToResidue, "Live");
                removalFractions.SetFractionToRemove("Stem", stemFracToRemove, "Dead");
                removalFractions.SetFractionToResidue("Stem", stemFracToResidue, "Dead");
                removalFractions.SetFractionToRemove("Inflorescence", flowerFracToRemove, "Live");
                removalFractions.SetFractionToResidue("Inflorescence", flowerFracToResidue, "Live");
                removalFractions.SetFractionToRemove("Inflorescence", flowerFracToRemove, "Dead");
                removalFractions.SetFractionToResidue("Inflorescence", flowerFracToResidue, "Dead");

                removalFractions.SetFractionToRemove("Root", 0.0);
                removalFractions.SetFractionToResidue("Root", 0.0);
                removalFractions.SetFractionToRemove("Taproot", 0.0);
                removalFractions.SetFractionToResidue("Taproot", 0.0);

                // Actually do the biomass removal
                Plantain.RemoveBiomass(removeType, removalFractions);

                // get the new existing plant amount
                double postHarvestWt = (double)zone.Get("Plantain.AboveGround.Wt");
                double postHarvestN = (double)zone.Get("Plantain.AboveGround.N");

                // get total defoliation (total plant stuff lost)
                DefoliatedDM = existingWt - postHarvestWt;
                DefoliatedN = existingN - postHarvestN;

                // get total harvested (plant stuff removed from plants)
                HarvestedDM = (double)zone.Get("Plantain.Leaf.Removed.Wt")
                + (double)zone.Get("Plantain.Stem.Removed.Wt")
                + (double)zone.Get("Plantain.Inflorescence.Removed.Wt");
                HarvestedN = (double)zone.Get("Plantain.Leaf.Removed.N")
                + (double)zone.Get("Plantain.Stem.Removed.N")
                + (double)zone.Get("Plantain.Inflorescence.Removed.N");

                // get amounts actually removed from field and that to be returned (residue or dung/urine)
                RemovedDM = HarvestedDM * fracDM2Remove;
                RemovedN = HarvestedN * fracN2Remove;
                ReturnedDM = HarvestedDM - RemovedDM;
                ReturnedN = HarvestedN - RemovedN;
                NReturnedInDung = ReturnedN * fracN2Dung;
                NReturnedInUrine = ReturnedN - NReturnedInDung;
            }
            else
            {
            }
        }

        // Return dung and urine
        private void returnExcreta()
        {
            if ((ReturnedDM > 0.0) || (NReturnedInDung > 0.0))
            {
                PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
                string[] type = new string[] { "RuminantDung_PastureFed" };
                float[] dltdm = new float[] { (Single)ReturnedDM };
                float[] dltn = new float[] { (Single)NReturnedInDung };
                float[] dltp = new float[] { 0 };
                float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

                BiomassDung.crop_type = "RuminantDung_PastureFed";
                BiomassDung.dm_type = type;
                BiomassDung.dlt_crop_dm = dltdm;
                BiomassDung.dlt_dm_n = dltn;
                BiomassDung.dlt_dm_p = dltp;
                BiomassDung.fraction_to_residue = fraction;
                BiomassRemoved.Invoke(BiomassDung);
            }

            if (NReturnedInUrine > 0.0)
            {
                fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, urineDepth);
            }
        }
    }
}
]]></Code>
        </Manager>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <ShowPageOfGraphs>false</ShowPageOfGraphs>
      </Folder>
      <MicroClimate>
        <Name>MicroClimate</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <a_interception>0</a_interception>
        <b_interception>1</b_interception>
        <c_interception>0</c_interception>
        <d_interception>0</d_interception>
        <soil_albedo>0.23</soil_albedo>
        <sun_angle>15</sun_angle>
        <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
        <night_interception_fraction>0.5</night_interception_fraction>
        <refheight>2</refheight>
        <albedo>0.26</albedo>
        <emissivity>0.96</emissivity>
        <RadIntTotal>0</RadIntTotal>
      </MicroClimate>
      <Irrigation>
        <Name>Irrigation</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
      </Irrigation>
      <Fertiliser>
        <Name>Fertiliser</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
      </Fertiliser>
      <SoluteManager>
        <Name>SoluteManager</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
      </SoluteManager>
      <SurfaceOrganicMatter>
        <Name>SurfaceOrganicMatter</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <PondActive>no</PondActive>
        <ReportAdditions>no</ReportAdditions>
        <ReportRemovals>no</ReportRemovals>
        <ResidueTypes>
          <Name>ResidueTypes</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <LoadFromResource>ResidueTypes</LoadFromResource>
        </ResidueTypes>
        <TillageTypes>
          <Name>TillageTypesList</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <TillageType />
        </TillageTypes>
        <Pools>
          <Pool>
            <PoolName>grass</PoolName>
            <ResidueType>grass</ResidueType>
            <Mass>500</Mass>
            <CNRatio>40</CNRatio>
            <CPRatio>NaN</CPRatio>
            <StandingFraction>0</StandingFraction>
          </Pool>
        </Pools>
        <PoolName>grass</PoolName>
        <type>grass</type>
        <mass>500</mass>
        <standing_fraction>0</standing_fraction>
        <cpr />
        <cnr>40</cnr>
        <CriticalResidueWeight>2000</CriticalResidueWeight>
        <OptimumDecompTemp>20</OptimumDecompTemp>
        <MaxCumulativeEOS>20</MaxCumulativeEOS>
        <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
        <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
        <TotalLeachRain>25</TotalLeachRain>
        <MinRainToLeach>10</MinRainToLeach>
        <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
        <DefaultCPRatio>0</DefaultCPRatio>
        <DefaultStandingFraction>0</DefaultStandingFraction>
        <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
        <FractionFaecesAdded>0.5</FractionFaecesAdded>
      </SurfaceOrganicMatter>
      <Soil>
        <Name>Soil</Name>
        <Analysis>
          <Name>Analysis</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>250</double>
            <double>250</double>
            <double>500</double>
          </Thickness>
          <Rocks>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </Rocks>
          <Texture />
          <MunsellColour />
          <PH>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
            <double>6</double>
          </PH>
          <CEC>
            <double>13</double>
            <double>11</double>
            <double>9</double>
            <double>8</double>
            <double>7</double>
            <double>6</double>
          </CEC>
          <ParticleSizeSand>
            <double>15</double>
            <double>20</double>
            <double>20</double>
            <double>25</double>
            <double>35</double>
            <double>35</double>
          </ParticleSizeSand>
          <ParticleSizeSilt>
            <double>65</double>
            <double>60</double>
            <double>60</double>
            <double>60</double>
            <double>55</double>
            <double>55</double>
          </ParticleSizeSilt>
          <ParticleSizeClay>
            <double>20</double>
            <double>20</double>
            <double>20</double>
            <double>15</double>
            <double>10</double>
            <double>10</double>
          </ParticleSizeClay>
          <PHUnits>Water</PHUnits>
          <BoronUnits>HotWater</BoronUnits>
        </Analysis>
        <Water>
          <Name>Water</Name>
          <SoilCrop>
            <Name>PlantainSoil</Name>
            <IncludeInDocumentation>true</IncludeInDocumentation>
            <LL>
              <double>0.15</double>
              <double>0.17</double>
              <double>0.19</double>
              <double>0.17</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.05</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>0.5</double>
            </XF>
          </SoilCrop>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>250</double>
            <double>250</double>
            <double>500</double>
          </Thickness>
          <BD>
            <double>1.3</double>
            <double>1.4</double>
            <double>1.5</double>
            <double>1.6</double>
            <double>1.45</double>
            <double>1.35</double>
          </BD>
          <AirDry>
            <double>0.05</double>
            <double>0.17</double>
            <double>0.19</double>
            <double>0.17</double>
            <double>0.1</double>
            <double>0.1</double>
          </AirDry>
          <LL15>
            <double>0.15</double>
            <double>0.17</double>
            <double>0.19</double>
            <double>0.17</double>
            <double>0.1</double>
            <double>0.1</double>
          </LL15>
          <DUL>
            <double>0.36</double>
            <double>0.34</double>
            <double>0.33</double>
            <double>0.3</double>
            <double>0.2</double>
            <double>0.2</double>
          </DUL>
          <SAT>
            <double>0.45</double>
            <double>0.42</double>
            <double>0.38</double>
            <double>0.36</double>
            <double>0.38</double>
            <double>0.39</double>
          </SAT>
          <KS>
            <double>4500</double>
            <double>2500</double>
            <double>200</double>
            <double>1500</double>
            <double>5000</double>
            <double>10000</double>
          </KS>
        </Water>
        <SoilWater>
          <Name>SoilWater</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <SummerDate>21-Sep</SummerDate>
          <SummerU>6</SummerU>
          <SummerCona>3.5</SummerCona>
          <WinterDate>23-Mar</WinterDate>
          <WinterU>6</WinterU>
          <WinterCona>2.5</WinterCona>
          <DiffusConst>88</DiffusConst>
          <DiffusSlope>35</DiffusSlope>
          <Salb>0.2</Salb>
          <CN2Bare>0.7</CN2Bare>
          <CNRed>20</CNRed>
          <CNCov>0.8</CNCov>
          <slope>NaN</slope>
          <discharge_width>NaN</discharge_width>
          <catchment_area>NaN</catchment_area>
          <max_pond>0</max_pond>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>250</double>
            <double>250</double>
            <double>500</double>
          </Thickness>
          <SWCON>
            <double>0.45</double>
            <double>0.35</double>
            <double>0.1</double>
            <double>0.15</double>
            <double>0.3</double>
            <double>0.2</double>
          </SWCON>
          <residueinterception>0</residueinterception>
        </SoilWater>
        <SoilNitrogen>
          <Name>SoilNitrogen</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <fom_type>
            <string>default</string>
            <string>manure</string>
            <string>mucuna</string>
            <string>lablab</string>
            <string>shemp</string>
            <string>stable</string>
          </fom_type>
          <fract_carb>
            <double>0.2</double>
            <double>0.3</double>
            <double>0.54</double>
            <double>0.57</double>
            <double>0.45</double>
            <double>0</double>
          </fract_carb>
          <fract_cell>
            <double>0.7</double>
            <double>0.3</double>
            <double>0.37</double>
            <double>0.37</double>
            <double>0.47</double>
            <double>0.1</double>
          </fract_cell>
          <fract_lign>
            <double>0.1</double>
            <double>0.4</double>
            <double>0.09</double>
            <double>0.06</double>
            <double>0.08</double>
            <double>0.9</double>
          </fract_lign>
        </SoilNitrogen>
        <SoilOrganicMatter>
          <Name>SoilOrganicMatter</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <RootCN>40</RootCN>
          <RootWt>1000</RootWt>
          <SoilCN>12</SoilCN>
          <EnrACoeff>7.4</EnrACoeff>
          <EnrBCoeff>0.2</EnrBCoeff>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>200</double>
            <double>250</double>
            <double>250</double>
            <double>500</double>
          </Thickness>
          <Depth>
            <string>0-15</string>
            <string>15-30</string>
            <string>30-50</string>
            <string>50-75</string>
            <string>75-100</string>
            <string>100-150</string>
          </Depth>
          <OC>
            <double>2.5</double>
            <double>1.25</double>
            <double>0.5</double>
            <double>0.2</double>
            <double>0.15</double>
            <double>0.1</double>
          </OC>
          <FBiom>
            <double>0.04</double>
            <double>0.025</double>
            <double>0.015</double>
            <double>0.01</double>
            <double>0.008</double>
            <double>0.008</double>
          </FBiom>
          <FInert>
            <double>0.4</double>
            <double>0.6</double>
            <double>0.8</double>
            <double>0.9</double>
            <double>0.95</double>
            <double>0.98</double>
          </FInert>
          <OCUnits>Total</OCUnits>
        </SoilOrganicMatter>
        <InitialWater>
          <Name>Initial water</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <PercentMethod>EvenlyDistributed</PercentMethod>
          <FractionFull>0.9</FractionFull>
          <DepthWetSoil>NaN</DepthWetSoil>
        </InitialWater>
        <Sample>
          <Name>Initial nitrogen</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
          <Thickness>
            <double>200</double>
            <double>200</double>
            <double>600</double>
            <double>500</double>
          </Thickness>
          <NO3>
            <double>25</double>
            <double>15</double>
            <double>20</double>
            <double>5</double>
          </NO3>
          <NH4>
            <double>1</double>
            <double>0.5</double>
            <double>0.5</double>
            <double>0.2</double>
          </NH4>
          <NO3Units>kgha</NO3Units>
          <NH4Units>kgha</NH4Units>
          <SWUnits>Volumetric</SWUnits>
          <OCUnits>Total</OCUnits>
          <PHUnits>Water</PHUnits>
        </Sample>
        <CERESSoilTemperature>
          <Name>CERESSoilTemperature</Name>
          <IncludeInDocumentation>true</IncludeInDocumentation>
        </CERESSoilTemperature>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <RecordNumber>0</RecordNumber>
        <SoilType>Generic medium texture</SoilType>
        <Region>Canterbury</Region>
        <State />
        <Country>New Zealand</Country>
        <Latitude>0</Latitude>
        <Longitude>0</Longitude>
      </Soil>
      <Plant>
        <Name>Plantain</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <ResourceName>Plantain</ResourceName>
        <CropType>Plantain</CropType>
      </Plant>
      <Report>
        <Name>Report</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <ExperimentFactorNames />
        <ExperimentFactorValues />
        <VariableNames>
          <string>[Clock].Today as Date</string>
          <string />
          <string>[Plantain].Population</string>
          <string>[Plantain].CropType</string>
          <string>[Plantain].Leaf.RadIntTot as InterceptedRadiation</string>
          <string />
          <string>[Irrigation].IrrigationApplied as IrrigationApplied</string>
          <string>[Soil].SoilWater.Es as Evaporation</string>
          <string>[Plantain].Leaf.Transpiration as Transpiration</string>
          <string>[Soil].SoilWater.Drainage as Drainage</string>
          <string>[Soil].SoilWater.Runoff as Runoff</string>
          <string>sum([Soil].SoilWater.SWmm) as TotalSWC</string>
          <string>sum([Soil].DULmm) as TotalDUL</string>
          <string>sum([Soil].LL15mm) as TotalLL15</string>
          <string>[Fertiliser].NitrogenApplied as FertiliserN</string>
          <string>sum([Soil].SoilNitrogen.Denitrification) as DenitrifiedN</string>
          <string>([Soil].SoilWater.LeachNH4 + [Soil].SoilWater.LeachNO3) as LeachedN</string>
          <string>(-1*[Plantain].Root.NUptake) as UptakeN</string>
          <string>(sum([Soil].SoilNitrogen.urea) + sum([Soil].SoilNitrogen.NH4) + sum([Soil].SoilNitrogen.NO3)) as SoilNContent</string>
          <string />
          <string>[Plantain].Total.Wt</string>
          <string>[Plantain].AboveGround.Wt</string>
          <string>[Plantain].BelowGround.Wt</string>
          <string>[Plantain].Leaf.Live.NConc</string>
          <string>[Plantain].Leaf.LAI</string>
          <string>[Plantain].Leaf.Live.Wt</string>
          <string>[Plantain].Stem.Live.Wt</string>
          <string>[Plantain].Inflorescence.Live.Wt</string>
          <string>[Plantain].Taproot.Live.Wt</string>
          <string>[Plantain].Root.Live.Wt</string>
          <string />
          <string>[Defoliate].Script.DefoliatedDM as HarvestedWt</string>
        </VariableNames>
        <EventNames>
          <string>[Clock].DoReport</string>
        </EventNames>
      </Report>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Area>1</Area>
      <Slope>0</Slope>
    </Zone>
    <Graph>
      <Name>Biomass</Name>
      <Series>
        <Name>Total</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16777216</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Dash</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.Total.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>AboveGround</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16736653</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.AboveGround.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>BelowGround</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-2793984</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.BelowGround.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Axis>
        <Type>Bottom</Type>
        <Title>Date</Title>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Left</Type>
        <Title />
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <LegendPosition>TopLeft</LegendPosition>
      <DisabledSeries />
    </Graph>
    <Graph>
      <Name>PlantParts</Name>
      <Series>
        <Name>Leaf</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16736653</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.Leaf.Live.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>Stem</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16777216</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Dot</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.Stem.Live.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>Inflorescence</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-11094807</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.Inflorescence.Live.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>Taproot</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-990142</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.Taproot.Live.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>Root</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-2793984</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>Plantain.Root.Live.Wt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Axis>
        <Type>Bottom</Type>
        <Title>Date</Title>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Left</Type>
        <Title />
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <LegendPosition>TopLeft</LegendPosition>
      <DisabledSeries />
    </Graph>
    <Graph>
      <Name>Harvests</Name>
      <Series>
        <Name>Events</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16736653</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>HarvestedWt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>Cumulative</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Right</YAxis>
        <ColourArgb>-16777216</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>HarvestedWt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>true</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Axis>
        <Type>Bottom</Type>
        <Title>Date</Title>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Left</Type>
        <Title />
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Right</Type>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <LegendPosition>TopLeft</LegendPosition>
      <DisabledSeries />
    </Graph>
    <Graph>
      <Name>Water</Name>
      <Series>
        <Name>WaterContent</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16747854</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>TotalSWC</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>DUL</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16777216</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>TotalDUL</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Series>
        <Name>LL15</Name>
        <IncludeInDocumentation>true</IncludeInDocumentation>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-2793984</ColourArgb>
        <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <Checkpoint>Current</Checkpoint>
        <TableName>Report</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>TotalLL15</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <IncludeInDocumentation>true</IncludeInDocumentation>
      <Axis>
        <Type>Bottom</Type>
        <Title>Date</Title>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Left</Type>
        <Title />
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <LegendPosition>TopLeft</LegendPosition>
      <DisabledSeries />
    </Graph>
    <IncludeInDocumentation>true</IncludeInDocumentation>
  </Simulation>
  <IncludeInDocumentation>true</IncludeInDocumentation>
  <ExplorerWidth>296</ExplorerWidth>
</Simulations>